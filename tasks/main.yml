---
- name: Ensure packages are installed
  apt:
    name: "{{ item }}"
  with_items:
      - rsync
      - git
  update_cache: yes

- name: Install additional packages 
  apt:
    name: "{{ item.key }}={{ item.value.version }}"
    force: yes
  when: additional_packages
  with_dict: "{{ additional_packages }}"
  update_cache: yes
  ignore_errors: True

- name: Creating project_root directory
  file:
    path: /var/www
    state: directory
    mode: 0755
    
- name: Copy all node data
  command: rsync -auvh --checksum --delete --chown=root:root /tmp/nodeapp/ /var/www/ --exclude node_modules

- name: Install "node-bin-setup" node.js package.
  command: npm install node-bin-setup --unsafe-perm
  args:
    chdir: /var/www
  ignore_errors: True

- name: Get node version
  command: node -p -e "require('/var/www/package.json').dependencies.node || '8.9.4'"
  register: node_version
  
#- name: Clean babel-eslint path
#  file:
#    state: absent
#    path: /var/www/node_modules/babel-eslint/

- name: Install default node node.js package.
  command: "npm install node@{{ node_version.stdout }} --unsafe-perm"
  args:
    chdir: /var/www

- name: Create symlinks to ruby and gem
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
    force: yes
  with_items:
    - { src: '/var/www/node_modules/node/bin/node', dest: '/opt/node/bin/node' }

- name: Install packages based on package.json.
  command: npm install npm@5.6.0 -g



- name: Install packages based on package.json.
  command: npm ci
  args:
    chdir: /var/www
